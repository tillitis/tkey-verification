.\" Generated by scdoc 1.11.2
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "tkey-verification" "1" "2024-06-05"
.P
.SH NAME
.P
A program to sign or verify the identity of a Tillitis TKey.\&
.P
.SH SYNOPSIS
.P
\fBtkey-verification\fR -h/--help
.P
\fBtkey-verification\fR remote-sign [--port port]
.P
\fBtkey-verification\fR serve-signer [--config path] [--check-config] [--port port]
.P
\fBtkey-verification\fR show-pubkey [--port port]
.P
\fBtkey-verification\fR verify [--base-url url] [-d | --base-dir] [--port port] [-u | --show-url]
.P
.SH DESCRIPTION
.P
\fBtkey-verification\fR is a program to sign or verify the identity of a
Tillitis TKey.\&
.P
A typical end user will only be interested in the \fBverify\fR command.\&
.P
The commands are as follows:
.P
\fBremote-sign\fR
.P
.RS 4
Request that the tkey-verification serve-signer sign the identity
of a TKey.\&
.P
To use, first insert a TKey and then run the command.\& If one is
already running a TKey program, remove it and re-insert before
running the command.\&
.P
Options:
.P
\fB--port\fR port
.P
.RS 4
Path to the TKey device port.\& If not given, autodetection will be
attempted.\&
.P
.RE
.RE
\fBserve-signer\fR
.P
.RS 4
Provide a signing server with its own TKey, the vendor key.\&
.P
When it receives a signing request it signs the data and creates a new
file with metadata and a signature.\& See FILES.\&
.P
Options:
.P
\fB--config\fR path
.P
.RS 4
Path to the configuration file.\&
.P
.RE
\fB--check-config\fR
.P
.RS 4
Check if the configuration file is OK and exit.\&
.P
.RE
\fB--port\fR port
.P
.RS 4
Path to the TKey device port.\& If not given, autodetection will be
attempted.\&
.P
.RE
.RE
\fBshow-pubkey\fR
.P
.RS 4
Output public key data to populate "vendor-signing-pubkeys.\&txt"
for building into \fBtkey-verification\fR to be able to use some other
commands.\& This is necessary in order to bootstrap \fBtkey-verification\fR
from scratch or to add another vendor signing key.\&
.P
The output includes public key, app tag, and app hash in the
right format for the file.\&
.P
Use the \fB--app\fR to specify the path of the app to load.\&
.P
Options:
.P
\fB--app\fR path
.P
.RS 4
Load app in \fBpath\fR into TKey.\&
.P
.RE
\fB--port\fR port
.P
.RS 4
Path to the TKey device port.\& If not given, autodetection will be
attempted.\&
.P
.RE
.RE
\fBverify\fR
.P
.RS 4
Verify a TKey identity.\&
.P
To use, first insert a TKey and then run the command.\& If one is
already running a TKey program, remove it and re-insert before running
the command.\&
.P
Options:
.P
\fB--base-url\fR url
.P
.RS 4
Set the base URL of verification server for fetching verification
data.\& Default is "https://example.\&com/verify".\&
.P
.RE
\fB-d\fR | \fB--base-dir\fR directory
.P
.RS 4
Read verification data from a file located in directory
and named after the TKey Unique Device Identifier in hex, instead of
from a URL.\&
.P
.RE
\fB--port\fR port
.P
.RS 4
Path to the TKey device port.\& If not given, autodetection will be
attempted.\&
.P
.RE
\fB-u\fR | \fB--show-url\fR
.P
.RS 4
Only output the URL to the verification data that should be
downloaded, then exit.\&
.P
.RE
.RE
.SS Verification on a machine without network
.P
If you'\&re on a machine without network and need to verify a TKey you
can run
.P
.nf
.RS 4
$ tkey-verification verify ---show-url
.fi
.RE
.P
which will output the URL to the verification file.\& Download the file
using another, networked, computer and somehow bring the file or type
it in again on your airgapped computer.\& Then run:
.P
.nf
.RS 4
tkey-verification verify -d=\&.
.fi
.RE
.P
to read from the current directory.\&
.P
.SH FILES
.P
\fBtkey-verification\fR serve-signer produces a file which is named after
the Unique Device Identifier (in hexadecimal) for every signature
made.\& An example filename would be "signatures/0133704100000015".\&
.P
The file contains:
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
timestamp: RFC3339 UTC timestamp when the signature was done.\&
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
tag: The Git tag of the signer program used on the device under
verification,
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
signature: Vendor ed25519 signature of the device public key.\& Stored
in hexadecimal.\&

.RE
.P
The files generated will later be published on a public web server.\&
The publication is out of scope for the current program.\&
.P
\fBtkey-verification\fR show-pubkey generates output for a file called
"vendor-signing-pubkeys.\&txt" to be included in the build of a new
\fBtkey-verification\fR.\& It'\&s output is:
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
Ed25519 public key
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
app name and tag.\&
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
digest of hash

.RE
.P
Example file:
.P
.nf
.RS 4
038dd0b898c601517a09cd249d3c4f2de8e9aab38c5fa02701ae29bb41a6d863 verisigner-v0\&.0\&.1 9598910ec9ebe2504a5f894de6f8e0677dc94c156c7bd6f7e805a35354b3c85daa4ca66ab93f4d75221b501def457b4cafc933c6cdcf16d1eb8ccba6cccf6630
.fi
.RE
.P
.SH EXAMPLES
.P
Verifying the identity of a Tillitis TKey using a networked computer.\&
.P
.nf
.RS 4
$ tkey-verification verify
.fi
.RE
.P
Verifying the identity with a non-networked computer: First
.P
.nf
.RS 4
$ tkey-verification --show-url
.fi
.RE
.P
Then download the file and move it to your current working directory.\&
Keep the name of the file intact since it'\&s named after the TKey
Unique Device Identifier.\& and run:
.P
.nf
.RS 4
$ tkey-verification verify -d=\&.
.fi
.RE
.P
In order to include a new vendor signing key, use:
.P
.nf
.RS 4
% \&./tkey-verification show-pubkey --port /dev/pts/12 --app cmd/tkey-verification/bins/signer-v1\&.0\&.0\&.bin
Connecting to device on serial port /dev/pts/12 \&.\&.\&.
Firmware name0:\&'tk1 \&' name1:\&'mkdf\&' version:5
Public Key, app tag, and app hash for vendor-signing-pubkeys\&.txt follows on stdout:
038dd0b898c601517a09cd249d3c4f2de8e9aab38c5fa02701ae29bb41a6d863 verisigner-v0\&.0\&.1 9598910ec9ebe2504a5f894de6f8e0677dc94c156c7bd6f7e805a35354b3c85daa4ca66ab93f4d75221b501def457b4cafc933c6cdcf16d1eb8ccba6cccf6630
.fi
.RE
.P
.SH AUTHORS
.P
Tillitis AB, https://tillitis.\&se/
.P
.SH CAVEATS
.P
You can currently not use several TKeys on the same computer at the
same time, which means you can'\&t use \fBserve-signer\fR and the other
commands on the same computer.\&
.P
.SH SECURITY CONSIDERATIONS
.P
\fBtkey-verification\fR only verifies the /identity/ of the TKey hasn'\&t
changed since signing by the vendor.\& It might have been manipulated in
other ways.\&
.P
The device public key isn'\&t published in the files generated by the
\fBserve-signer\fR but is retrievable by anyone with access to the device
under verification.\&
.P
You probably shouldn'\&t expose the computers running \fBserve-signer\fR or
\fBremote-sign\fR on the Internet.\&
